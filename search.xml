<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript的三种弹出框：警告框、确认框、提示框</title>
      <link href="/2022/11/16/JavaScript%E7%9A%84%E4%B8%89%E7%A7%8D%E5%BC%B9%E5%87%BA%E6%A1%86%EF%BC%9A%E8%AD%A6%E5%91%8A%E6%A1%86%E3%80%81%E7%A1%AE%E8%AE%A4%E6%A1%86%E3%80%81%E6%8F%90%E7%A4%BA%E6%A1%86/"/>
      <url>/2022/11/16/JavaScript%E7%9A%84%E4%B8%89%E7%A7%8D%E5%BC%B9%E5%87%BA%E6%A1%86%EF%BC%9A%E8%AD%A6%E5%91%8A%E6%A1%86%E3%80%81%E7%A1%AE%E8%AE%A4%E6%A1%86%E3%80%81%E6%8F%90%E7%A4%BA%E6%A1%86/</url>
      
        <content type="html"><![CDATA[<p>JavaScript的三种不同弹出框：警告框、确认框、提示框</p><p>1、警告框：window.alert()</p><p>当我们需要用户看到一些信息时，可以使用警告框，用户必须点击警告框上的【确定】按钮，才能继续操作。</p><p>函数参数为弹出框显示的内容。</p><img src="/2022/11/16/JavaScript%E7%9A%84%E4%B8%89%E7%A7%8D%E5%BC%B9%E5%87%BA%E6%A1%86%EF%BC%9A%E8%AD%A6%E5%91%8A%E6%A1%86%E3%80%81%E7%A1%AE%E8%AE%A4%E6%A1%86%E3%80%81%E6%8F%90%E7%A4%BA%E6%A1%86/1.png" class title="This is an test image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;JavaScript的弹出框&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;input type=&quot;button&quot; value=&quot;弹出警告框&quot; onclick=&quot;popup()&quot;/&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    function popup()&#123;</span><br><span class="line">      alert(&quot;点击[确定]以继续操作&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>2、确认框：window.confirm()</p><p>确认框可以让用户做出一个选择，以确认接下来是否进行某种行为。</p><p>函数参数为弹出框显示的内容。</p><p>点击[确定]返回true，点击[取消]返回false。</p><img src="/2022/11/16/JavaScript%E7%9A%84%E4%B8%89%E7%A7%8D%E5%BC%B9%E5%87%BA%E6%A1%86%EF%BC%9A%E8%AD%A6%E5%91%8A%E6%A1%86%E3%80%81%E7%A1%AE%E8%AE%A4%E6%A1%86%E3%80%81%E6%8F%90%E7%A4%BA%E6%A1%86/2.png" class title="This is an test image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;JavaScript的弹出框&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    var v = confirm(&quot;是否弹出确认框&quot;);</span><br><span class="line">    //点击[确定]（返回true）则弹出一个确认框</span><br><span class="line">    if(v)&#123;</span><br><span class="line">      popup();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    //弹出确认框</span><br><span class="line">    function popup()&#123;</span><br><span class="line">      alert(&quot;点击[确定]以继续操作&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>3、提示框：window.prompt()</p><p>提示框让用户在进行某种操作前可以输入信息。</p><p>例如跳转到其他网页前弹出一个提示框，让用户输入要跳转的网页地址。</p><p>该函数有两个形参，形参1为弹出框显示的内容，形参2为默认的输入值。</p><p>该框点击[确定]返回输入值，点击[取消]返回null。</p><img src="/2022/11/16/JavaScript%E7%9A%84%E4%B8%89%E7%A7%8D%E5%BC%B9%E5%87%BA%E6%A1%86%EF%BC%9A%E8%AD%A6%E5%91%8A%E6%A1%86%E3%80%81%E7%A1%AE%E8%AE%A4%E6%A1%86%E3%80%81%E6%8F%90%E7%A4%BA%E6%A1%86/3.png" class title="This is an test image"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;JavaScript的弹出框&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    var v = prompt(&quot;输入你要跳转的网页地址&quot;,&quot;https://www.taobao.com&quot;);</span><br><span class="line">    if(v)&#123;</span><br><span class="line">      open(v);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>原文链接：<a href="https://blog.csdn.net/Dawson_Ho/article/details/109522194">https://blog.csdn.net/Dawson_Ho/article/details/109522194</a></p>]]></content>
      
      
      <categories>
          
          <category> 小功能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 弹出框 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署报错 spawn failed</title>
      <link href="/2022/11/15/hexo%E9%83%A8%E7%BD%B2%E6%8A%A5%E9%94%99-spawn-failed/"/>
      <url>/2022/11/15/hexo%E9%83%A8%E7%BD%B2%E6%8A%A5%E9%94%99-spawn-failed/</url>
      
        <content type="html"><![CDATA[<p>问题出现:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">err: Error: Spawn failed</span><br><span class="line">      at ChildProcess.&lt;anonymous&gt; (D:\workplace\blog\node_modules\hexo-util\lib\spawn.js:51:21)</span><br><span class="line">      at ChildProcess.emit (events.js:376:20)</span><br><span class="line">      at ChildProcess.cp.emit (D:\workplace\blog\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line">      at Process.ChildProcess._handle.onexit (internal/child_process.js:277:12) &#123;</span><br><span class="line">    code: 128</span><br></pre></td></tr></table></figure><p>常规解决办法：<br>解决方法一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 第一个就是你的邮箱，第二个就是你的用户名</span><br><span class="line">git config --global user.email &quot;2673065011@qq.com&quot;</span><br><span class="line">git config --global user.name &quot;210173313&quot;</span><br></pre></td></tr></table></figure><p>解决方法二：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 删除.deploy_git文件夹,输入：</span><br><span class="line">git config --global core.autocrlf false</span><br><span class="line"># 然后，依次执行：</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>解决方法三：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 打开_config.yml配置文件，修改以下内容</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">type: &#x27;git&#x27;</span><br><span class="line">repo: https://github.com/yourname/yourname.github.io.git</span><br><span class="line">branch: master</span><br><span class="line"># 其中的repo修改为</span><br><span class="line">repo: git@github.com:yourname/yourname.github.io.git</span><br></pre></td></tr></table></figure><p>试了一下以上常规方法，并没有解决问题，最后的解决办法是重新创建git仓库并连接，然后成功部署。</p>]]></content>
      
      
      <categories>
          
          <category> 日常bug </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微服务调用的数据库错误导致项目报错</title>
      <link href="/2022/11/12/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%99%E8%AF%AF%E5%AF%BC%E8%87%B4%E9%A1%B9%E7%9B%AE%E6%8A%A5%E9%94%99/"/>
      <url>/2022/11/12/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%99%E8%AF%AF%E5%AF%BC%E8%87%B4%E9%A1%B9%E7%9B%AE%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<p>今天早上刚打开项目，发现不能运行，本来以为是数据库的问题，但是后来王洁伟重启数据库服务并没有解决问题，然后直接走接口查询数据的也会报相同的错误，后来通过求助穆老师得知，是因为我们代码里的某一个微服务调用的数据库报错，然后导致项目报错。第一次遇见这种问题，在这记录一下。</p><img src="/2022/11/12/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%99%E8%AF%AF%E5%AF%BC%E8%87%B4%E9%A1%B9%E7%9B%AE%E6%8A%A5%E9%94%99/1.png" class title="This is an test image"><p>192.168.0.99这个ip下的2036端口号出现了问题。解决办法目前还理解不了，希望随着知识的积累以后可以明白。</p>]]></content>
      
      
      <categories>
          
          <category> 日常bug </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Unable to resolve path [Excipients.qty], unexpected token [Excipients]的问题</title>
      <link href="/2022/11/11/Unable-to-resolve-path-Excipients-qty-unexpected-token-Excipients-%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2022/11/11/Unable-to-resolve-path-Excipients-qty-unexpected-token-Excipients-%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>后台报错上面报的是无法创建类的bean的错误，一开始以为问题出现在这，然后搜到的解决办法有两种,后来试了一下都不行</p><img src="/2022/11/11/Unable-to-resolve-path-Excipients-qty-unexpected-token-Excipients-%E7%9A%84%E9%97%AE%E9%A2%98/1.png" class title="This is an test image"><img src="/2022/11/11/Unable-to-resolve-path-Excipients-qty-unexpected-token-Excipients-%E7%9A%84%E9%97%AE%E9%A2%98/2.png" class title="This is an test image"><p>然后后面报的错误是，Unable to resolve path [Excipients.qty], unexpected token [Excipients]，然后搜了一下，可能是因为没有在sql语句中起别名的原因，<br>后来起了个别名，然后就可以正常运行了。</p><img src="/2022/11/11/Unable-to-resolve-path-Excipients-qty-unexpected-token-Excipients-%E7%9A%84%E9%97%AE%E9%A2%98/3.png" class title="This is an test image"><img src="/2022/11/11/Unable-to-resolve-path-Excipients-qty-unexpected-token-Excipients-%E7%9A%84%E9%97%AE%E9%A2%98/4.png" class title="This is an test image">]]></content>
      
      
      <categories>
          
          <category> 日常bug </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解决 TypeError: Cannot read properties of undefined (reading ‘xxx‘) </title>
      <link href="/2022/11/10/%E8%A7%A3%E5%86%B3-TypeError-Cannot-read-properties-of-undefined-reading-%E2%80%98xxx%E2%80%98/"/>
      <url>/2022/11/10/%E8%A7%A3%E5%86%B3-TypeError-Cannot-read-properties-of-undefined-reading-%E2%80%98xxx%E2%80%98/</url>
      
        <content type="html"><![CDATA[<p>问题描述：Cannot read properties of undefined (reading ‘xxx’)</p><p>问题解决：<br>情况一：<br>出现该错误的原因是因为你花括号中的某些属性未定义。很有可能是因为你写错了属性名称</p><p>情况二：<br>异步请求获取数据时，由于数据时异步获取的，所以一开始是没有该数据属性，这种情况下也会报这种错误。比如说我这里有一个数据detaildata，初始值为一个空对象。是不会报错的，但是，这样就会报错了。这是为什么呢？<br>因为，detaildata.info已经是一个undefined了，你undefined.name就肯定会报错了。<br>所以在初始化时，info属性赋值为空对象就行了。</p><img src="/2022/11/10/%E8%A7%A3%E5%86%B3-TypeError-Cannot-read-properties-of-undefined-reading-%E2%80%98xxx%E2%80%98/1.png" class title="This is an test image"><p>只需要把summarydata声明为一个空对象即可。</p>]]></content>
      
      
      <categories>
          
          <category> 日常bug </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>无法生成同名文件夹存储照片问题</title>
      <link href="/2022/11/10/%E6%97%A0%E6%B3%95%E7%94%9F%E6%88%90%E5%90%8C%E5%90%8D%E6%96%87%E4%BB%B6%E5%A4%B9%E5%AD%98%E5%82%A8%E7%85%A7%E7%89%87%E9%97%AE%E9%A2%98/"/>
      <url>/2022/11/10/%E6%97%A0%E6%B3%95%E7%94%9F%E6%88%90%E5%90%8C%E5%90%8D%E6%96%87%E4%BB%B6%E5%A4%B9%E5%AD%98%E5%82%A8%E7%85%A7%E7%89%87%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>一开始使用hexo new post “文件名”创建文章时，只能创建出.md文件，并不能创建出同名文件夹来存储图片</p><img src="/2022/11/10/%E6%97%A0%E6%B3%95%E7%94%9F%E6%88%90%E5%90%8C%E5%90%8D%E6%96%87%E4%BB%B6%E5%A4%B9%E5%AD%98%E5%82%A8%E7%85%A7%E7%89%87%E9%97%AE%E9%A2%98/1.png" class title="This is an test image"><p>后来找到这个方法，手动创建文件夹，但是图片还是无法显示，最后找到解决办法成功解决</p><ol><li>在根目录下配置文件_config.yml 中有 post_asset_folder:false改为true。这样在建立文件时，Hexo会自动建立一个与文章同名的文件夹，这样就可以把与该文章相关的所有资源（图片）都放到那个文件夹里方便后面引用。如这里我放了一张test.jpg的图片。</li><li>git bash安装插件：npm install <a href="https://github.com/7ym0n/hexo-asset-image">https://github.com/7ym0n/hexo-asset-image</a> –save（这是个修改过的插件，经测试无问题），使用这个插件来引入图片，而不是网上那些方法里说的用传统md语法相对路径的方法。</li><li>插入图片时用这种方式：其中test.jpg就是你要引用的图片，我这里就是test.jpg，后面的This is an test image是图片描述，可以自己修改。</li><li>这样就能成功显示了，测试下吧：hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</li></ol>]]></content>
      
      
      <categories>
          
          <category> 日常bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建Myblog中的错误</title>
      <link href="/2022/11/08/%E5%88%9B%E5%BB%BAMyblog%E4%B8%AD%E7%9A%84%E9%94%99%E8%AF%AF/"/>
      <url>/2022/11/08/%E5%88%9B%E5%BB%BAMyblog%E4%B8%AD%E7%9A%84%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<p>在创建我的博客时，一开始遇见的错误是推送不上去，再git bash here 中输入hexo d 时会一直卡在那里没有反应，后来在配置文件中把http的地址修改为<br>ssh的地址就可以了，然后可以推送给上去但是不知道为啥一直打不开页面，后来才知道是因为创建仓库时，名字后面没有加.github.io 后缀。</p>]]></content>
      
      
      <categories>
          
          <category> 日常bug </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
